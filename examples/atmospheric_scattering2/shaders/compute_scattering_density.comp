#version 460

#include "atmosphere_model.glsl"

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(set = 1, binding = 1) uniform sampler2D transmittance_texture;

layout(set = 3, binding = 5) uniform sampler2D irradiance_texture;
layout(set = 3, binding = 6) uniform sampler3D single_rayleigh_scattering_texture;
layout(set = 3, binding = 7) uniform sampler3D single_mie_scattering_texture;
layout(set = 3, binding = 8) uniform sampler3D multiple_scattering_texture;

layout(set = 3, binding = 3, rgba32f ) uniform image3D scattering_density_image;

layout(push_constant) uniform Constants {
    int scattering_order;
};

vec3 voxelCoord = vec3(gl_GlobalInvocationID) + 0.5;

void main(){
    vec3 scattering_density =
        ComputeScatteringDensityTexture(ATMOSPHERE, transmittance_texture, single_rayleigh_scattering_texture,
            single_mie_scattering_texture, multiple_scattering_texture, irradiance_texture, voxelCoord, scattering_order);

    imageStore(scattering_density_image, ivec3(gl_GlobalInvocationID), vec4(scattering_density.rgb, 0));
}