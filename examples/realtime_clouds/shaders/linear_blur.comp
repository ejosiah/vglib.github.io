#version 460

// https://www.rastergrid.com/blog/2010/09/efficient-gaussian-blur-with-linear-sampling/
#define N_TAP 3


layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0) uniform sampler2D iImage;
layout(set = 0, binding = 1, rgba32f) uniform image2D oImage;

layout(push_constant) uniform CONTANTS{
    int horizontal;
};

shared vec3 results[N_TAP];

float offsets[N_TAP] = float[]( 0.0, 1.3846153846, 3.2307692308 );
float weights[N_TAP] = float[]( 0.2270270270, 0.3162162162, 0.0702702703 );

void main(){
    vec2 resolution = vec2(gl_NumWorkGroups * gl_WorkGroupSize);
    vec2 uv = (vec2(gl_GlobalInvocationID) + 0.5)/resolution;

    vec4 fragColor = texture(iImage, uv);
    fragColor.rgb *= weights[0];

    for(int i = 1; i < 3; i++){
        vec2 coord = bool(horizontal) ? vec2(offsets[i], 0) : vec2(0, offsets[i]);
        coord /= resolution;
        fragColor.rgb += texture(iImage, uv + coord).rgb * weights[i];
        fragColor.rgb += texture(iImage, uv - coord).rgb * weights[i];
    }

    imageStore(oImage, ivec2(gl_GlobalInvocationID), fragColor);

}