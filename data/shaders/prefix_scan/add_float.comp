#version 460 core

#define OPERATION_ADD 0
#define OPERATION_MIN 1
#define OPERATION_MAX 2

layout(local_size_x = 1024) in;

layout(set = 0, binding = 0) buffer DATA {
    float g_data[];
};

layout(set = 0, binding = 1) buffer SUMS {
    float g_sums[];
};

layout(push_constant) uniform Constants{
    uint itemsPerWorkGroup;
    uint N;
    uint operation;
};

float op(float a, float b);

void main(){
    float sum = g_sums[gl_WorkGroupID.x];
    uint offset = gl_WorkGroupID.x * itemsPerWorkGroup;
    uint i = offset + gl_LocalInvocationIndex;
    uint step = gl_WorkGroupSize.x;
    uint n = offset + itemsPerWorkGroup;

    for(i ; i < n; i += step){
        g_data[i] = op(g_data[i], sum);
    }
}

float op(float a, float b) {
    switch(operation) {
        case OPERATION_MIN: return min(a, b);
        case OPERATION_MAX: return max(a, b);
        default:  return a + b;
    }
}