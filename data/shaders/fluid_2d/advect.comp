#version 460
#extension GL_EXT_scalar_block_layout : enable
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_nonuniform_qualifier : enable

layout(local_size_x = 32, local_size_y = 32) in;

#include "common_new.glsl"

layout(set = 2, binding = 0, r32f) uniform image2D vector_field_u;
layout(set = 3, binding = 0, r32f) uniform image2D vector_field_v;
layout(set = 4, binding = 0) uniform writeonly image2D img_quantity_out;
layout(set = 5, binding = 0) uniform texture2D quantity;
layout(set = 6, binding = 0) uniform sampler aSampler;

layout(push_constant) uniform Constants {
    uvec2 vector_field_id;
    uint quantity_in;
    uint quantity_out;
    uint sampler_id;
};

vec2 loadVectorField() {
    vec2 u;
    u.x = imageLoad(vector_field_u, gid).x;
    u.y = imageLoad(vector_field_v, gid).x;

    return u;
}


vec4 getQuantity(vec2 xy) {
    return texture(sampler2D(quantity, aSampler), xy);
}

void updateQuantity(vec4 q) {
    imageStore(img_quantity_out, gid, q);
}

void main() {
    if(outOfBounds()) return;

    vec2 uv = get_uv();
    vec2 u = loadVectorField();

    vec2 p = st(uv - dt * u);
    vec4 q = getQuantity(p);

    updateQuantity(q);
}