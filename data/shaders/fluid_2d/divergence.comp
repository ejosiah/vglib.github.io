#version 460
#extension GL_EXT_scalar_block_layout : enable
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_nonuniform_qualifier : enable

layout(local_size_x = 32, local_size_y = 32) in;

#include "common_new.glsl"

layout(push_constant) uniform Constants {
    uvec4 vector_field_id;
    uint divergence_field_id;
    uint pressure_field_id;
};

vec2 F(vec2 xy) {
    return vectorField(xy, vector_field_id.xy);
}

vec2 u(vec2 coord) {
    return applyBoundaryCondition(coord, F(st(coord)));
}

void main() {
    if(outOfBounds()) return;

    vec2 uv = get_uv();

    float dudx = (u(uv + dx).x - u(uv - dx).x)/(2*dx.x);
    float dudy = (u(uv + dy).y - u(uv - dy).y)/(2*dy.y);

    float div = dudx + dudy;

    imageStore(gImages[divergence_field_id], gid, vec4(div));
}