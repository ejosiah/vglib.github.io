#version 460

#extension GL_EXT_scalar_block_layout : enable
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_EXT_samplerless_texture_functions : enable

#include "common_new.glsl"

layout(local_size_x = 32, local_size_y = 32) in;

layout(set = 2, binding = 0) uniform texture2D source_field;
layout(set = 3, binding = 0) uniform texture2D accumulated_field;
layout(set = 4, binding = 0) uniform writeonly image2D destination_field;
layout(set = 5, binding = 0) uniform sampler aSampler;

void main() {
    if(gid.x >= grid_size.x || gid.y >= grid_size.y) return;

    vec2 uv = get_uv();
    vec4 result = texture(sampler2D(source_field, aSampler), uv) * dt + texture(sampler2D(accumulated_field, aSampler), uv);

    imageStore(destination_field, gid, result);
}